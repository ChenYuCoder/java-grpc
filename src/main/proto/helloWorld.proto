// 每个.proto文件则会生成一个Java文件，在.proto内声明的所有enum/message等数据结构都会以内部类的形式生成
// 声明proto3语法,如果不指定则会使用proto2
syntax="proto3";
//声明包结构
package com.vichen.hello.proto;
//声明服务，HelloWorldService为Java文件名称，内部会生成几个类
//*BlockingStub：client基本数据调用
//*Stub：client端流数据调用
//*ImplBase：server端抽象类
//*FutureStub：
service HelloWorldService{
    rpc sayHello(Request) returns(Response){}
    rpc sayHelloStreamResponse(Request) returns (stream Response) {}
    rpc sayHelloStreamRequest(stream Request) returns (Response) {}
    rpc chatHello(stream Request) returns (stream Response) {}
}
// 枚举类型，必须从0开始，序号可跨越。同一包下不能重名，所以加前缀来区别
enum Tt{
    T1 =0;
    T2 = 1;
}
//声明类
//- strings, 默认值是空字符串（empty string）
//- bytes, 默认值是空bytes（empty bytes）
//- bools, 默认值是false
//- numeric, 默认值是0
//- enums, 默认值是第一个枚举值（value必须为0）
//- double
//- float
//- int32 int
//- int64 long
//- uint32 int(1)
//- uint64 long(1)
//- repeated 数组，默认值为empty
//- map key-value

//required：值不可为空
//optional：可选字段
//singular：符合语法规则的消息包含零个或者一个这样的字段（最多一个）
//repeated：一个字段在合法的消息中可以重复出现一定次数（包括零次）。重复出现的值的次序将被保留。在proto3中，重复出现的值类型字段默认采用压缩编码。你可以在这里找到更多关于压缩编码的东西： Protocol Buffer Encoding。
//默认值： optional PhoneType type = 2 [default = HOME];
//proto3中，省略required,optional,singular，由protoc自动选择。
message Request{
    string name=1;
}
//声明类
message Response{
    string data =1;
    //map 类型
    map<string, string> projects = 3;
}

